class Stack:
    def __init__(self, size=100):
        self.size = size
        self.stack = [None] * size
        self.top = -1  

    def push(self, x):
        if self.top == self.size - 1:
            raise OverflowError("Stack overflow")
        self.top += 1
        self.stack[self.top] = x

    def pop(self):
        if self.top == -1:
            raise IndexError("Stack underflow")
        self.top -= 1

    def top_element(self):
        if self.top == -1:
            raise IndexError("Stack is empty")
        return self.stack[self.top]

    def is_empty(self):
        return self.top == -1

# Example usage:
s = Stack()
s.push(10)
s.push(20)
print("Top element:", s.top_element())  
s.pop()
print("Top element after pop:", s.top_element())  
