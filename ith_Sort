#include <iostream>
#include <cstdlib>

int partition(int arr[], int left, int right) {
    int pivot = arr[right];  
    int i = left - 1;  

    for (int j = left; j < right; j++) {
        if (arr[j] <= pivot) {
            i++;
            std::swap(arr[i], arr[j]);
        }
    }
    std::swap(arr[i + 1], arr[right]);
    return i + 1;
}

int quickselect(int arr[], int left, int right, int i) {
    if (left == right) return arr[left];

    int pivotIndex = partition(arr, left, right);
    int k = pivotIndex - left + 1;

    if (i == k)  
        return arr[pivotIndex];
    else if (i < k)
        return quickselect(arr, left, pivotIndex - 1, i);
    else
        return quickselect(arr, pivotIndex + 1, right, i - k);
}

int main() {
    int arr[] = {7, 10, 4, 3, 20, 15};
    int size = sizeof(arr) / sizeof(arr[0]);
    int i = 3;  

    std::cout << "The " << i << "rd smallest element is " << quickselect(arr, 0, size - 1, i) << std::endl;
    return 0;
}
