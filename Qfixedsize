class Queue:
    def __init__(self, size=100):
        self.size = size
        self.queue = [None] * size
        self.front = 0
        self.rear = -1
        self.count = 0  

    def enqueue(self, x):
        if self.count == self.size:
            raise OverflowError("Queue overflow")
        self.rear = (self.rear + 1) % self.size
        self.queue[self.rear] = x
        self.count += 1

    def dequeue(self):
        if self.count == 0:
            raise IndexError("Queue underflow")
        self.front = (self.front + 1) % self.size
        self.count -= 1

    def front_element(self):
        if self.count == 0:
            raise IndexError("Queue is empty")
        return self.queue[self.front]

    def is_empty(self):
        return self.count == 0

# Example usage:
q = Queue()
q.enqueue(10)
q.enqueue(20)
print("Front element:", q.front_element())  
q.dequeue()
print("Front element after dequeue:", q.front_element())  
